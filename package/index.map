{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 27ad29484bc32303e3e6","webpack:///./fsphone-masks.ts","webpack:///./fsphone.directive.ts","webpack:///./fsphone.module.ts","webpack:///./fsphone.value-accessor.ts","webpack:///./index.ts","webpack:///./services/fsphone.service.ts","webpack:///external \"@angular/common\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"hammerjs\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@firestitch/phone\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@firestitch/phone\"] = factory();\n\telse\n\t\troot[\"@firestitch/phone\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 27ad29484bc32303e3e6","export const PHONE_MASKS: {\r\n  [key: string]: Array<any>;\r\n} = {\r\n  ru: ['+', '7', '(', /\\d/, /\\d/, /\\d/, ')', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/ ],\r\n  us: ['(', /\\d/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/ ]\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fsphone-masks.ts","import { FsPhone } from './services/fsphone.service';\r\nimport { PHONE_VALUE_ACCESSOR } from './fsphone.value-accessor';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Directive, Input, Inject, Renderer, ElementRef, Pipe, OnInit } from '@angular/core';\r\n\r\n/*\r\n    Phone directive. Adds text-mask for any input-type HTML element. Has one working option right now: maskType: 'ru' | 'us', which can be easily extended by adding more phone mask constants in phone-masks.ts file.\r\n    Consists the base of functionality of creating the universal text-mask component like https://github.com/text-mask/text-mask\r\n    The struggle: easiest way of making this is ceating a real of shadow-DOM element, duplicating user's input, projecting all the user inputs in there and applying a mask on real element. This way in the easiest and would significantly decrease the code amount (and also the possibility of unaccounted behaviours), but would be less productive and would cause more glitches on non-standard ways of using it with components.\r\n    By the way it works right now (only one element, all the calculations happen inside the service, separately) it's much more productive and can be used on any input element without messing up with HTML code (e.g. if developer using it would like to use jQuery, another libraries, would like to create his own element duplicate etc), but from other point adds more behaviors we could have missed usage-wise.\r\n    In future to be perfected, a little optimised, worked on any use-case and can, indeed, become the best text-mask component on the market.\r\n*/\r\n\r\n@Directive({\r\n    host: {\r\n        '(input)': 'onChangeInterceptor($event)',\r\n        '(keyup)': 'onKeyup($event)',\r\n        '(keydown)': 'onKeydown($event)',\r\n        '(tap)': 'onClick($event)',\r\n        '(focus)': 'onFocused($event)',\r\n        '(paste)': 'onPaste($event)',\r\n        '(blur)': '_onTouched()'\r\n    },\r\n    selector: '[fsPhone]',\r\n    providers: [PHONE_VALUE_ACCESSOR]\r\n})\r\nexport class FsPhoneDirective implements OnInit {\r\n    private mask;\r\n    private regexes;\r\n    private caretMove;\r\n\r\n    //hack, because some events wont move caret on keydown\r\n    private goOnKeyup;\r\n    @Input('fsPhoneConfig')\r\n    fsPhoneConfig = {\r\n        maskType: 'us',\r\n        mask: null\r\n    }\r\n\r\n\r\n    //event hooks for VALUE_ACCESSOR. those are used to imitate real input behavior and emit events outside the directive, e.g. \"touched\"\r\n    _onTouched = () => {\r\n\r\n    }\r\n    _onChange = (value: any) => { }\r\n    onFocused = (event: any) => {\r\n        this.setInitialValue(event);\r\n    }\r\n\r\n    //sets the initial value of text-mask when first focused or when cleared\r\n    setInitialValue(event) {\r\n        let value = event.target.value\r\n\r\n        if (!value || !value.length) {\r\n            this._elementRef.nativeElement.value = this.service.getInitialValue(this.mask);\r\n            let caret = this.service.getFirstAvailableCaretPos(this.mask);\r\n            event.target.setSelectionRange(caret, caret);\r\n        }\r\n    }\r\n\r\n\r\n    //some of the keys cant be processed on keydown, because they only initiate functionality after keyup\r\n    onKeyup = (event: any) => {\r\n        if (\r\n            event.key == 'Delete' ||\r\n            event.key == 'Backspace'\r\n        ) {\r\n            this.setInitialValue(event);\r\n        } else if (event.key == 'Home') {\r\n            let caret = this.service.getFirstAvailableCaretPos(this.mask);\r\n            event.target.setSelectionRange(caret, caret);\r\n        }\r\n\r\n        if(this.goOnKeyup) {\r\n            event.target.setSelectionRange(this.goOnKeyup, this.goOnKeyup);\r\n            delete this.goOnKeyup;\r\n        }\r\n    }\r\n\r\n    //mouse click on input\r\n    onClick = (event: any) => {\r\n        this.manageCaret(event);\r\n    }\r\n\r\n\r\n    //one of hugest struggles - caret position on focus/copy-paste/deletion etc. puts caret on first unfilled input place\r\n    manageCaret(event) {\r\n        let caret = event.target.selectionStart;\r\n        if(event.target.value.indexOf('_') != -1 && event.target.selectionStart > event.target.value.indexOf('_'))\r\n            caret = event.target.value.indexOf('_');\r\n        else caret = this.trackCaret(event);\r\n        event.target.setSelectionRange(caret, caret);\r\n    }\r\n\r\n    //managemenet of unusual events on input, not just usual inputs\r\n    onKeydown = (event: any) => {\r\n        switch(event.key) {\r\n            case 'Shift': break;\r\n            case 'Meta': break;\r\n            case 'ArrowRight': break;\r\n            case 'ArrowLeft':\r\n                if(!event.shiftKey && !event.metaKey) {\r\n                    let caret = event.target.selectionStart;\r\n                    if (this.service.getFirstAvailableCaretPos(this.mask) >= caret)\r\n                        caret = event.target.selectionStart + 1;\r\n                    event.target.setSelectionRange(caret, caret);\r\n                } else if (event.metaKey) {\r\n                    this.goOnKeyup = this.service.getFirstAvailableCaretPos(this.mask);\r\n                }\r\n            break;\r\n            case 'Backspace':\r\n                this.trackCaret(event, -2);\r\n            break;\r\n            case 'Delete':\r\n                this.caretMove = event.target.selectionStart - 1;\r\n            break;\r\n            default:\r\n                this.trackCaret(event);\r\n        }\r\n\r\n    }\r\n\r\n    onPaste = (event: any) => {\r\n        delete this.caretMove;\r\n    }\r\n\r\n    // sets the caret based on event happened. has some HTML-glitch hacks\r\n    trackCaret(event, preset = 0) {\r\n        let caret = this.service.caretPosition(event.target.selectionStart, this.mask, event.target.value);\r\n\r\n        this.caretMove = caret + preset;\r\n        //means backspace\r\n        if(preset == -2) {\r\n            this.caretMove = event.target.selectionStart-2;\r\n        }\r\n\r\n        if(event.key && event.key.length == 1 && !this.service.isValidForInput(event.key, this.caretMove, this.mask))\r\n            this.caretMove--;\r\n\r\n        return this.caretMove;\r\n    }\r\n\r\n\r\n    // we initiate those functions to emit events outside the component\r\n    registerOnChange(fn: (value: any) => any): void { this._onChange = fn }\r\n    registerOnTouched(fn: () => any): void { this._onTouched = fn }\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled)\r\n    }\r\n\r\n\r\n    constructor(\r\n        @Inject(ElementRef) private _elementRef: ElementRef,\r\n        @Inject(Renderer) private renderer: Renderer,\r\n        private service: FsPhone\r\n    ) {\r\n\r\n    }\r\n\r\n    //init functions\r\n    ngOnInit() {\r\n        this.mask = this.service.determineMask(this.fsPhoneConfig.maskType, this.fsPhoneConfig.mask);\r\n        this.regexes = this.service.combineRegexes(this.mask);\r\n    }\r\n\r\n    //whenever user changes anything inside the input, this function is fired. happens after the input, not wired on keypresses but on input value changes\r\n    private onChangeInterceptor(event): void {\r\n        let fittingValues = this.service.getFittingArr(\r\n            event.target.value,\r\n            this.mask,\r\n            this.regexes\r\n        )\r\n\r\n\r\n        let newValue: string;\r\n        newValue = this.service.formatValue(\r\n            fittingValues,\r\n            this.mask,\r\n            event.target.selectionStart,\r\n            event.element,\r\n            this.regexes\r\n        );\r\n\r\n\r\n        this.writeValue(newValue, event.target.selectionStart, false);\r\n        // this.manageCaret(event);\r\n    }\r\n\r\n    //main function used to re-write user input with the mask and emit changes out of the directive\r\n    private writeValue(value: any, returnHere, initialCall = true): void {\r\n      if (initialCall && !value) {\r\n        return;\r\n      }\r\n\r\n      this.renderer.setElementProperty(this._elementRef.nativeElement, 'value', value);\r\n      let caretDelta = 0;\r\n      if (this.caretMove) {\r\n          returnHere = this.caretMove + 1;\r\n          delete this.caretMove;\r\n      } else caretDelta = this.service.getCaretDelta(returnHere, this.mask);\r\n      this._elementRef.nativeElement.setSelectionRange(returnHere + caretDelta, returnHere + caretDelta)\r\n\r\n      this._onChange(value);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fsphone.directive.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport 'hammerjs';\r\n// Components\r\nimport { FsPhoneDirective } from './fsphone.directive';\r\nimport { FsPhone } from './services/fsphone.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    // Angular\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    FsPhoneDirective,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  declarations: [\r\n    FsPhoneDirective,\r\n  ],\r\n  providers: [\r\n    FsPhone\r\n  ],\r\n})\r\nexport class FsPhoneModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: FsPhoneModule,\r\n      providers: [FsPhone]\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fsphone.module.ts","import { FsPhoneDirective } from './fsphone.directive';\r\nimport { Provider, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms'\r\n\r\nexport const PHONE_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => FsPhoneDirective),\r\n  multi: true\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fsphone.value-accessor.ts","export * from './fsphone.module';\r\nexport * from './fsphone.directive';\r\nexport * from './services/fsphone.service';\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./index.ts","import { Injectable } from '@angular/core';\r\nimport { PHONE_MASKS } from './../fsphone-masks';\r\n\r\nconst INPUT_PLACEHOLDER = '_';\r\n\r\n@Injectable()\r\nexport class FsPhone {\r\n    public determineMask(maskType, mask) {\r\n        if (maskType && PHONE_MASKS[maskType]) {\r\n            return PHONE_MASKS[maskType]\r\n        } else if (mask) return mask;\r\n    }\r\n\r\n    //moves caret out of pre-set zone\r\n    public getCaretDelta(caret, mask) {\r\n        let delta = 1;\r\n        while(typeof mask[caret+delta] == 'string') delta++;\r\n        return delta;\r\n    }\r\n\r\n    //determines exact caret positions\r\n    public caretPosition(caret, mask, value) {\r\n        let valueArr = value.split('');\r\n        let moveTo = caret;\r\n        for(let i = caret; i<=moveTo; i++) {\r\n            if(typeof mask[i] == 'string') moveTo++;\r\n        }\r\n        return moveTo;\r\n    }\r\n\r\n    //determines where to put caret when focused\r\n    public getFirstAvailableCaretPos(mask) {\r\n        for(let i = 0; i<=mask.length-1; i++) {\r\n            if(typeof mask[i] != 'string') {\r\n\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //holding it in case of future use\r\n    // public leftArrowCaretPosition(caret, mask) {\r\n    //     let suitablePos = caret;\r\n    //     for(let i = caret; i>=0; i--) {\r\n    //\r\n    //         if(typeof mask[i-1] == 'string') {\r\n    //\r\n    //             suitablePos = i-1;\r\n    //             return this.leftArrowCaretPosition(suitablePos, mask);\r\n    //         } else if (typeof mask[i-1] == 'undefined') { //if there is no mask at this point, means we have reached the very beginning without finding a single input place, so returning an error code\r\n    //             return -1;\r\n    //         } else return suitablePos;\r\n    //     }\r\n    //\r\n    //     return suitablePos;\r\n    // }\r\n\r\n    public combineRegexes(mask) {\r\n        let regexArr = [];\r\n        mask.forEach((maskVal, i) => {\r\n            if (typeof maskVal == 'object') {\r\n                regexArr.push({\r\n                    regex: maskVal,\r\n                    index: i\r\n                })\r\n            }\r\n        })\r\n        return regexArr;\r\n    }\r\n\r\n    //text-mask consists of two types of elements - simple characters to be put for user visual and regexes to be replaced with user inputs. this function extracts characters which fit into regex and that dont overflow with string-characters (e.g. +1)\r\n    public getFittingArr(value, mask, regexArr) {\r\n        let valueArr = value.split('');\r\n\r\n        let regexCounter = 0;\r\n        let fittingValues = [];\r\n        for (let i = 0; i < valueArr.length; i++) {\r\n            let regex = regexArr[regexCounter];\r\n            if(regex && regex.regex.test(mask[i])) {}\r\n            else if (regex && valueArr[i] && regex.regex.test(valueArr[i])) {\r\n                regexCounter++;\r\n                fittingValues.push({\r\n                    index: regex.index,\r\n                    value: valueArr[i]\r\n                });\r\n            }\r\n        }\r\n\r\n        return fittingValues;\r\n    }\r\n\r\n    //determines if current symbol is valid for user input\r\n    public isValidForInput(symbol, i, mask) {\r\n        if(typeof mask[i] == 'object' && mask[i].test(symbol)) return true;\r\n        else return false;\r\n    }\r\n\r\n    //main function of formatting the value into the regex + characters from text-mask\r\n    public formatValue(fittingValues: Array<any>, mask: Array<any>, caret, element: any, regexArr): any {\r\n        let res = [];\r\n        //\r\n        if(fittingValues && fittingValues.length) {\r\n            for (let i = 0; i <= fittingValues[fittingValues.length-1].index; i++) {\r\n                if(typeof mask[i] == 'string') res[i] = mask[i];\r\n            }\r\n\r\n            fittingValues.forEach(value => {\r\n                res[value.index] = value.value;\r\n            })\r\n\r\n            for(let i = res.length; i<mask.length; i++) {\r\n                if (typeof mask[i] == 'string') res[i] = mask[i];\r\n                else res[i] = INPUT_PLACEHOLDER;\r\n            }\r\n\r\n            return this.cutIt(res.join(''), mask);\r\n\r\n        } else return '';\r\n\r\n    }\r\n\r\n    //fills in the value from user input\r\n    private fillInValue(valueArr, mask, i) {\r\n        if (valueArr[i + 1] == INPUT_PLACEHOLDER) valueArr.splice(i + 1, 1);\r\n        return valueArr;\r\n    }\r\n\r\n    //recurselivly goes through the textmask and replaces regexes with fitting characters\r\n    private replaceRecursive(valueArr: Array<string>, mask: Array<any>, i: number): Array<string> {\r\n\r\n        //if its a constant\r\n        if (typeof mask[i] == 'string') {\r\n            if (valueArr[i] == mask[i]) return this.replaceRecursive(valueArr, mask, ++i);\r\n            else {\r\n                let tmp = valueArr[i];\r\n                valueArr[i] = mask[i];\r\n                if (tmp) valueArr[i + 1] = tmp;\r\n                return this.replaceRecursive(valueArr, mask, i + 1);\r\n            }\r\n        } else if (typeof mask[i] == 'object') {//if its a RegExp\r\n            if (!valueArr[i]) valueArr[i] = INPUT_PLACEHOLDER;\r\n            valueArr = this.fillInValue(valueArr, mask, i);\r\n            return this.replaceRecursive(valueArr, mask, ++i);\r\n        } else {\r\n\r\n            return valueArr;\r\n        }\r\n    }\r\n\r\n\r\n    //cuts the string to text-mask length\r\n    private cutIt(value: string, mask: Array<any>): string {\r\n        return value.slice(0, mask.length);\r\n    }\r\n\r\n    //returns initial value of input\r\n    public getInitialValue(mask: Array<any> = null): string {\r\n        let res = \"\";\r\n\r\n        mask.forEach(maskElem => {\r\n            if (typeof maskElem == 'string') res = res + maskElem;\r\n            else res = res + INPUT_PLACEHOLDER;\r\n        });\r\n\r\n        return res;\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./services/fsphone.service.ts","module.exports = require(\"@angular/common\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = @angular/common\n// module chunks = 0","module.exports = require(\"@angular/core\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = @angular/core\n// module chunks = 0","module.exports = require(\"@angular/forms\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/forms\"\n// module id = @angular/forms\n// module chunks = 0","module.exports = require(\"hammerjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"hammerjs\"\n// module id = hammerjs\n// module chunks = 0"],"sourceRoot":""}